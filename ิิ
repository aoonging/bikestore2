# -----------------------------
# üó∫Ô∏è ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏±‡∏ê‡πÑ‡∏´‡∏ô‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î + Repeat Rate
# -----------------------------
st.markdown("### ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏™‡∏≤‡∏Ç‡∏≤")

# ‡∏ô‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏±‡∏ê
top_states = customers.groupby('customer_state').size().reset_index(name='count')

# ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ê -> ‡∏£‡∏´‡∏±‡∏™ 2 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)
us_state_abbrev = {
    'Alabama':'AL','Alaska':'AK','Arizona':'AZ','Arkansas':'AR','California':'CA','Colorado':'CO',
    'Connecticut':'CT','Delaware':'DE','District of Columbia':'DC','Florida':'FL','Georgia':'GA',
    'Hawaii':'HI','Idaho':'ID','Illinois':'IL','Indiana':'IN','Iowa':'IA','Kansas':'KS','Kentucky':'KY',
    'Louisiana':'LA','Maine':'ME','Maryland':'MD','Massachusetts':'MA','Michigan':'MI','Minnesota':'MN',
    'Mississippi':'MS','Missouri':'MO','Montana':'MT','Nebraska':'NE','Nevada':'NV','New Hampshire':'NH',
    'New Jersey':'NJ','New Mexico':'NM','New York':'NY','North Carolina':'NC','North Dakota':'ND',
    'Ohio':'OH','Oklahoma':'OK','Oregon':'OR','Pennsylvania':'PA','Rhode Island':'RI','South Carolina':'SC',
    'South Dakota':'SD','Tennessee':'TN','Texas':'TX','Utah':'UT','Vermont':'VT','Virginia':'VA',
    'Washington':'WA','West Virginia':'WV','Wisconsin':'WI','Wyoming':'WY','Puerto Rico':'PR'
}
ts = top_states.copy()
ts['customer_state'] = ts['customer_state'].astype(str).str.strip()
ts['state_code'] = ts['customer_state'].map(us_state_abbrev).fillna(ts['customer_state'].str.upper())

# ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏£‡∏±‡∏ê 2 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
ts_valid = ts[ts['state_code'].str.len() == 2].copy()

# if ts_valid.empty:
#     st.info("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏£‡∏±‡∏ê‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà (USA-states). ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ customer_state")
# else:
#     fig_map = px.choropleth(
#         ts_valid,
#         locations='state_code',
#         locationmode='USA-states',
#         color='count',
#         color_continuous_scale='Blues',
#         scope='usa',
#         labels={'count':'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'}
#     )

    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
    with st.expander("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà"):
        show_labels = st.checkbox("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà", value=True)
        label_mode = st.selectbox(
            "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠",
            options=["‡∏ï‡∏±‡∏ß‡∏¢‡πà‡∏≠‡∏£‡∏±‡∏ê", "‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ê", "‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ê + ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"],
            index=2
        )
        label_font_size = st.slider("‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£", min_value=8, max_value=20, value=11)

    if show_labels:
        # Centroid ‡∏Ç‡∏≠‡∏á‡∏£‡∏±‡∏ê (‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏õ‡πâ‡∏≤‡∏¢)
        STATE_CENTROIDS = {
            'AL': (32.806671, -86.791130), 'AK': (61.370716, -152.404419), 'AZ': (33.729759, -111.431221),
            'AR': (34.969704, -92.373123), 'CA': (36.116203, -119.681564), 'CO': (39.059811, -105.311104),
            'CT': (41.597782, -72.755371), 'DE': (39.318523, -75.507141), 'DC': (38.9072, -77.0369),
            'FL': (27.766279, -81.686783), 'GA': (33.040619, -83.643074), 'HI': (21.094318, -157.498337),
            'ID': (44.240459, -114.478828), 'IL': (40.349457, -88.986137), 'IN': (39.849426, -86.258278),
            'IA': (42.011539, -93.210526), 'KS': (38.5266, -96.726486), 'KY': (37.66814, -84.670067),
            'LA': (31.169546, -91.867805), 'ME': (44.693947, -69.381927), 'MD': (39.063946, -76.802101),
            'MA': (42.230171, -71.530106), 'MI': (43.326618, -84.536095), 'MN': (45.694454, -93.900192),
            'MS': (32.741646, -89.678696), 'MO': (38.456085, -92.288368), 'MT': (46.921925, -110.454353),
            'NE': (41.12537, -98.268082), 'NV': (38.313515, -117.055374), 'NH': (43.452492, -71.563896),
            'NJ': (40.298904, -74.521011), 'NM': (34.840515, -106.248482), 'NY': (42.165726, -74.948051),
            'NC': (35.630066, -79.806419), 'ND': (47.528912, -99.784012), 'OH': (40.388783, -82.764915),
            'OK': (35.565342, -96.928917), 'OR': (44.572021, -122.070938), 'PA': (40.590752, -77.209755),
            'RI': (41.680893, -71.51178), 'SC': (33.856892, -80.945007), 'SD': (44.299782, -99.438828),
            'TN': (35.747845, -86.692345), 'TX': (31.054487, -97.563461), 'UT': (40.150032, -111.862434),
            'VT': (44.045876, -72.710686), 'VA': (37.769337, -78.169968), 'WA': (47.400902, -121.490494),
            'WV': (38.491226, -80.954453), 'WI': (44.268543, -89.616508), 'WY': (42.755966, -107.30249),
            'PR': (18.220833, -66.590149)
        }

        # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
        label_rows = []
        for _, r in ts_valid.iterrows():
            code = r['state_code']
            if code in STATE_CENTROIDS:
                lat, lon = STATE_CENTROIDS[code]
                if label_mode == "‡∏ï‡∏±‡∏ß‡∏¢‡πà‡∏≠‡∏£‡∏±‡∏ê":
                    text = code
                elif label_mode == "‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ê":
                    text = r['customer_state']
                else:
                    text = f"{r['customer_state']} ({int(r['count']):,})"
                label_rows.append({"state_code": code, "lat": lat, "lon": lon, "text": text})

        if label_rows:
            labels_df = pd.DataFrame(label_rows)
            fig_map.add_trace(
                go.Scattergeo(
                    lon=labels_df['lon'],
                    lat=labels_df['lat'],
                    text=labels_df['text'],
                    mode="text",
                    textfont=dict(size=label_font_size, color="ORANGE"),
                    hoverinfo="skip",
                    showlegend=False
                )
            )

    # ‡∏õ‡∏£‡∏±‡∏ö layout
    fig_map.update_layout(
        geo=dict(scope='usa', projection_type='albers usa', showlakes=True, lakecolor="rgb(255,255,255)"),
        margin=dict(l=0, r=0, t=0, b=0)
    )
    st.plotly_chart(fig_map, use_container_width=True)


with st.expander("‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏≤‡∏°‡∏£‡∏±‡∏ê"):
    st.dataframe(ts[['customer_state','count']].sort_values('count', ascending=False),
                 use_container_width=True)
    